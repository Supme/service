// Code generated by protoc-gen-go. DO NOT EDIT.
// source: translit.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Word struct {
	Word                 string   `protobuf:"bytes,1,opt,name=Word,proto3" json:"Word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_translit_dac332736a93c08d, []int{0}
}
func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (dst *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(dst, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func init() {
	proto.RegisterType((*Word)(nil), "proto.Word")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransliterationClient is the client API for Transliteration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransliterationClient interface {
	EnRu(ctx context.Context, opts ...grpc.CallOption) (Transliteration_EnRuClient, error)
}

type transliterationClient struct {
	cc *grpc.ClientConn
}

func NewTransliterationClient(cc *grpc.ClientConn) TransliterationClient {
	return &transliterationClient{cc}
}

func (c *transliterationClient) EnRu(ctx context.Context, opts ...grpc.CallOption) (Transliteration_EnRuClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Transliteration_serviceDesc.Streams[0], "/proto.Transliteration/EnRu", opts...)
	if err != nil {
		return nil, err
	}
	x := &transliterationEnRuClient{stream}
	return x, nil
}

type Transliteration_EnRuClient interface {
	Send(*Word) error
	Recv() (*Word, error)
	grpc.ClientStream
}

type transliterationEnRuClient struct {
	grpc.ClientStream
}

func (x *transliterationEnRuClient) Send(m *Word) error {
	return x.ClientStream.SendMsg(m)
}

func (x *transliterationEnRuClient) Recv() (*Word, error) {
	m := new(Word)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TransliterationServer is the server API for Transliteration service.
type TransliterationServer interface {
	EnRu(Transliteration_EnRuServer) error
}

func RegisterTransliterationServer(s *grpc.Server, srv TransliterationServer) {
	s.RegisterService(&_Transliteration_serviceDesc, srv)
}

func _Transliteration_EnRu_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TransliterationServer).EnRu(&transliterationEnRuServer{stream})
}

type Transliteration_EnRuServer interface {
	Send(*Word) error
	Recv() (*Word, error)
	grpc.ServerStream
}

type transliterationEnRuServer struct {
	grpc.ServerStream
}

func (x *transliterationEnRuServer) Send(m *Word) error {
	return x.ServerStream.SendMsg(m)
}

func (x *transliterationEnRuServer) Recv() (*Word, error) {
	m := new(Word)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Transliteration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Transliteration",
	HandlerType: (*TransliterationServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EnRu",
			Handler:       _Transliteration_EnRu_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "translit.proto",
}

func init() { proto.RegisterFile("translit.proto", fileDescriptor_translit_dac332736a93c08d) }

var fileDescriptor_translit_dac332736a93c08d = []byte{
	// 107 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x29, 0x4a, 0xcc,
	0x2b, 0xce, 0xc9, 0x2c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x52,
	0x5c, 0x2c, 0xe1, 0xf9, 0x45, 0x29, 0x42, 0x42, 0x10, 0x5a, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33,
	0x08, 0xcc, 0x36, 0xb2, 0xe4, 0xe2, 0x0f, 0x81, 0x6a, 0x4a, 0x2d, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf,
	0x13, 0x52, 0xe3, 0x62, 0x71, 0xcd, 0x0b, 0x2a, 0x15, 0xe2, 0x86, 0x98, 0xa2, 0x07, 0x52, 0x27,
	0x85, 0xcc, 0x51, 0x62, 0xd0, 0x60, 0x34, 0x60, 0x4c, 0x62, 0x03, 0x8b, 0x18, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xbe, 0x36, 0x1a, 0xe2, 0x76, 0x00, 0x00, 0x00,
}
