// Code generated by protoc-gen-go. DO NOT EDIT.
// source: email.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmailValidateError int32

const (
	EmailValidateError_NO_ERROR                     EmailValidateError = 0
	EmailValidateError_OTHER_ERROR                  EmailValidateError = 1
	EmailValidateError_BAD_FORMAT                   EmailValidateError = 2
	EmailValidateError_HOST_DOES_NOT_HAVE_MX        EmailValidateError = 3
	EmailValidateError_MX_HOST_IN_RESERVED_IP_RANGE EmailValidateError = 4
)

var EmailValidateError_name = map[int32]string{
	0: "NO_ERROR",
	1: "OTHER_ERROR",
	2: "BAD_FORMAT",
	3: "HOST_DOES_NOT_HAVE_MX",
	4: "MX_HOST_IN_RESERVED_IP_RANGE",
}
var EmailValidateError_value = map[string]int32{
	"NO_ERROR":                     0,
	"OTHER_ERROR":                  1,
	"BAD_FORMAT":                   2,
	"HOST_DOES_NOT_HAVE_MX":        3,
	"MX_HOST_IN_RESERVED_IP_RANGE": 4,
}

func (x EmailValidateError) String() string {
	return proto.EnumName(EmailValidateError_name, int32(x))
}
func (EmailValidateError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_email_0cc81782eea513d9, []int{0}
}

type EmailValidateRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailValidateRequest) Reset()         { *m = EmailValidateRequest{} }
func (m *EmailValidateRequest) String() string { return proto.CompactTextString(m) }
func (*EmailValidateRequest) ProtoMessage()    {}
func (*EmailValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_email_0cc81782eea513d9, []int{0}
}
func (m *EmailValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailValidateRequest.Unmarshal(m, b)
}
func (m *EmailValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailValidateRequest.Marshal(b, m, deterministic)
}
func (dst *EmailValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailValidateRequest.Merge(dst, src)
}
func (m *EmailValidateRequest) XXX_Size() int {
	return xxx_messageInfo_EmailValidateRequest.Size(m)
}
func (m *EmailValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailValidateRequest proto.InternalMessageInfo

func (m *EmailValidateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EmailValidateRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type EmailValidateReply struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Valid                bool               `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
	Canonical            string             `protobuf:"bytes,3,opt,name=canonical,proto3" json:"canonical,omitempty"`
	Error                EmailValidateError `protobuf:"varint,4,opt,name=error,proto3,enum=proto.EmailValidateError" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EmailValidateReply) Reset()         { *m = EmailValidateReply{} }
func (m *EmailValidateReply) String() string { return proto.CompactTextString(m) }
func (*EmailValidateReply) ProtoMessage()    {}
func (*EmailValidateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_email_0cc81782eea513d9, []int{1}
}
func (m *EmailValidateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailValidateReply.Unmarshal(m, b)
}
func (m *EmailValidateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailValidateReply.Marshal(b, m, deterministic)
}
func (dst *EmailValidateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailValidateReply.Merge(dst, src)
}
func (m *EmailValidateReply) XXX_Size() int {
	return xxx_messageInfo_EmailValidateReply.Size(m)
}
func (m *EmailValidateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailValidateReply.DiscardUnknown(m)
}

var xxx_messageInfo_EmailValidateReply proto.InternalMessageInfo

func (m *EmailValidateReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EmailValidateReply) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *EmailValidateReply) GetCanonical() string {
	if m != nil {
		return m.Canonical
	}
	return ""
}

func (m *EmailValidateReply) GetError() EmailValidateError {
	if m != nil {
		return m.Error
	}
	return EmailValidateError_NO_ERROR
}

func init() {
	proto.RegisterType((*EmailValidateRequest)(nil), "proto.EmailValidateRequest")
	proto.RegisterType((*EmailValidateReply)(nil), "proto.EmailValidateReply")
	proto.RegisterEnum("proto.EmailValidateError", EmailValidateError_name, EmailValidateError_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmailClient is the client API for Email service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailClient interface {
	// Validate email
	Validate(ctx context.Context, in *EmailValidateRequest, opts ...grpc.CallOption) (*EmailValidateReply, error)
	// Stream validate email
	StreamValidate(ctx context.Context, opts ...grpc.CallOption) (Email_StreamValidateClient, error)
}

type emailClient struct {
	cc *grpc.ClientConn
}

func NewEmailClient(cc *grpc.ClientConn) EmailClient {
	return &emailClient{cc}
}

func (c *emailClient) Validate(ctx context.Context, in *EmailValidateRequest, opts ...grpc.CallOption) (*EmailValidateReply, error) {
	out := new(EmailValidateReply)
	err := c.cc.Invoke(ctx, "/proto.Email/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailClient) StreamValidate(ctx context.Context, opts ...grpc.CallOption) (Email_StreamValidateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Email_serviceDesc.Streams[0], "/proto.Email/StreamValidate", opts...)
	if err != nil {
		return nil, err
	}
	x := &emailStreamValidateClient{stream}
	return x, nil
}

type Email_StreamValidateClient interface {
	Send(*EmailValidateRequest) error
	Recv() (*EmailValidateReply, error)
	grpc.ClientStream
}

type emailStreamValidateClient struct {
	grpc.ClientStream
}

func (x *emailStreamValidateClient) Send(m *EmailValidateRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *emailStreamValidateClient) Recv() (*EmailValidateReply, error) {
	m := new(EmailValidateReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EmailServer is the server API for Email service.
type EmailServer interface {
	// Validate email
	Validate(context.Context, *EmailValidateRequest) (*EmailValidateReply, error)
	// Stream validate email
	StreamValidate(Email_StreamValidateServer) error
}

func RegisterEmailServer(s *grpc.Server, srv EmailServer) {
	s.RegisterService(&_Email_serviceDesc, srv)
}

func _Email_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Email/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServer).Validate(ctx, req.(*EmailValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Email_StreamValidate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EmailServer).StreamValidate(&emailStreamValidateServer{stream})
}

type Email_StreamValidateServer interface {
	Send(*EmailValidateReply) error
	Recv() (*EmailValidateRequest, error)
	grpc.ServerStream
}

type emailStreamValidateServer struct {
	grpc.ServerStream
}

func (x *emailStreamValidateServer) Send(m *EmailValidateReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *emailStreamValidateServer) Recv() (*EmailValidateRequest, error) {
	m := new(EmailValidateRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Email_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Email",
	HandlerType: (*EmailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Validate",
			Handler:    _Email_Validate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamValidate",
			Handler:       _Email_StreamValidate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "email.proto",
}

func init() { proto.RegisterFile("email.proto", fileDescriptor_email_0cc81782eea513d9) }

var fileDescriptor_email_0cc81782eea513d9 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x90, 0xbf, 0x4f, 0xc2, 0x40,
	0x14, 0xc7, 0xb9, 0x42, 0x0d, 0x3c, 0x4c, 0x6d, 0x5e, 0x30, 0x29, 0xca, 0x40, 0x98, 0x88, 0x03,
	0x1a, 0x5c, 0x5d, 0x6a, 0x7a, 0x0a, 0x03, 0x3d, 0xf3, 0xda, 0x10, 0xb6, 0xcb, 0x09, 0x37, 0x34,
	0x29, 0x14, 0x6b, 0x35, 0x61, 0x73, 0xf5, 0x8f, 0xf0, 0x7f, 0x35, 0x5c, 0x31, 0x46, 0xd2, 0xcd,
	0xe9, 0xf2, 0xfd, 0x75, 0xf7, 0xc9, 0x41, 0x5b, 0xaf, 0x55, 0x92, 0x8e, 0xb6, 0x79, 0x56, 0x64,
	0x68, 0x9b, 0x63, 0x70, 0x07, 0x1d, 0xbe, 0x77, 0xe7, 0x2a, 0x4d, 0x56, 0xaa, 0xd0, 0xa4, 0x5f,
	0xde, 0xf4, 0x6b, 0x81, 0x0e, 0x58, 0xc9, 0xca, 0x63, 0x7d, 0x36, 0x6c, 0x91, 0x95, 0xac, 0xb0,
	0x03, 0xb6, 0x59, 0x7b, 0x96, 0xb1, 0x4a, 0x31, 0xf8, 0x64, 0x80, 0x47, 0xf3, 0x6d, 0xba, 0xab,
	0x1a, 0xbf, 0xef, 0x0b, 0x66, 0xdc, 0xa4, 0x52, 0x60, 0x0f, 0x5a, 0x4b, 0xb5, 0xc9, 0x36, 0xc9,
	0x52, 0xa5, 0x5e, 0xdd, 0x94, 0x7f, 0x0d, 0xbc, 0x06, 0x5b, 0xe7, 0x79, 0x96, 0x7b, 0x8d, 0x3e,
	0x1b, 0x3a, 0xe3, 0x6e, 0x89, 0x3d, 0xfa, 0xf3, 0x1a, 0xdf, 0x17, 0xa8, 0xec, 0x5d, 0x7d, 0x1c,
	0xb3, 0x98, 0x14, 0x4f, 0xa1, 0x19, 0x0a, 0xc9, 0x89, 0x04, 0xb9, 0x35, 0x3c, 0x83, 0xb6, 0x88,
	0x27, 0x9c, 0x0e, 0x06, 0x43, 0x07, 0xe0, 0xde, 0x0f, 0xe4, 0x83, 0xa0, 0x99, 0x1f, 0xbb, 0x16,
	0x76, 0xe1, 0x7c, 0x22, 0xa2, 0x58, 0x06, 0x82, 0x47, 0x32, 0x14, 0xb1, 0x9c, 0xf8, 0x73, 0x2e,
	0x67, 0x0b, 0xb7, 0x8e, 0x7d, 0xe8, 0xcd, 0x16, 0xd2, 0xa4, 0xd3, 0x50, 0x12, 0x8f, 0x38, 0xcd,
	0x79, 0x20, 0xa7, 0x4f, 0x92, 0xfc, 0xf0, 0x91, 0xbb, 0x8d, 0xf1, 0x17, 0x03, 0xdb, 0x20, 0x60,
	0x00, 0xcd, 0x1f, 0x0c, 0xbc, 0xac, 0x42, 0x3f, 0xfc, 0xf3, 0x45, 0xb7, 0x3a, 0xdc, 0xa6, 0xbb,
	0x41, 0x0d, 0x43, 0x70, 0xa2, 0x22, 0xd7, 0x6a, 0xfd, 0xff, 0xbb, 0x86, 0xec, 0x86, 0x3d, 0x9f,
	0x98, 0xfc, 0xf6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x81, 0xaa, 0xbb, 0x09, 0x02, 0x00, 0x00,
}
